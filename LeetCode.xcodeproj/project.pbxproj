// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 55;
	objects = {

/* Begin PBXBuildFile section */
		860F233F2772146F00A1713E /* 15.三数之和.mm in Sources */ = {isa = PBXBuildFile; fileRef = 860F233E2772146F00A1713E /* 15.三数之和.mm */; };
		86116E6F277CA6B700598177 /* Pow202112291022.mm in Sources */ = {isa = PBXBuildFile; fileRef = 86116E6E277CA6B700598177 /* Pow202112291022.mm */; };
		8616BB76278BC98F00173F58 /* 剑指 Offer 55 - I. 二叉树的深度.mm in Sources */ = {isa = PBXBuildFile; fileRef = 8616BB75278BC98F00173F58 /* 剑指 Offer 55 - I. 二叉树的深度.mm */; };
		8616BB78278BCB2F00173F58 /* 剑指 Offer 55 - II. 平衡二叉树.mm in Sources */ = {isa = PBXBuildFile; fileRef = 8616BB77278BCB2F00173F58 /* 剑指 Offer 55 - II. 平衡二叉树.mm */; };
		8616BB7A278D4AEB00173F58 /* 剑指 Offer 68 - I. 二叉搜索树的最近公共祖先.mm in Sources */ = {isa = PBXBuildFile; fileRef = 8616BB79278D4AEB00173F58 /* 剑指 Offer 68 - I. 二叉搜索树的最近公共祖先.mm */; };
		8616BB7C278D4C8000173F58 /* 剑指 Offer 68 - II. 二叉树的最近公共祖先.mm in Sources */ = {isa = PBXBuildFile; fileRef = 8616BB7B278D4C8000173F58 /* 剑指 Offer 68 - II. 二叉树的最近公共祖先.mm */; };
		8616BB81278D6B5300173F58 /* LinkList202201111537.mm in Sources */ = {isa = PBXBuildFile; fileRef = 8616BB80278D6B5300173F58 /* LinkList202201111537.mm */; };
		8616BB83278D795700173F58 /* 环形链表.mm in Sources */ = {isa = PBXBuildFile; fileRef = 8616BB82278D795700173F58 /* 环形链表.mm */; };
		8616BB85278D7BEA00173F58 /* 环形链表 II.mm in Sources */ = {isa = PBXBuildFile; fileRef = 8616BB84278D7BEA00173F58 /* 环形链表 II.mm */; };
		8616BB87278D863B00173F58 /* 相交链表.mm in Sources */ = {isa = PBXBuildFile; fileRef = 8616BB86278D863B00173F58 /* 相交链表.mm */; };
		8616BB89278D885300173F58 /* 删除链表的倒数第N个节点.mm in Sources */ = {isa = PBXBuildFile; fileRef = 8616BB88278D885300173F58 /* 删除链表的倒数第N个节点.mm */; };
		8616BB8B278D924800173F58 /* 移除链表元素.mm in Sources */ = {isa = PBXBuildFile; fileRef = 8616BB8A278D924800173F58 /* 移除链表元素.mm */; };
		8616BB8D278DB56700173F58 /* 奇偶链表.mm in Sources */ = {isa = PBXBuildFile; fileRef = 8616BB8C278DB56700173F58 /* 奇偶链表.mm */; };
		8616BB93278ECE2700173F58 /* 234. 回文链表.mm in Sources */ = {isa = PBXBuildFile; fileRef = 8616BB92278ECE2700173F58 /* 234. 回文链表.mm */; };
		8616BB99278EE15A00173F58 /* 剑指 Offer 07. 重建二叉树.mm in Sources */ = {isa = PBXBuildFile; fileRef = 8616BB98278EE15A00173F58 /* 剑指 Offer 07. 重建二叉树.mm */; };
		8616BB9B278EEE1D00173F58 /* 剑指 Offer 16. 数值的整数次方.mm in Sources */ = {isa = PBXBuildFile; fileRef = 8616BB9A278EEE1D00173F58 /* 剑指 Offer 16. 数值的整数次方.mm */; };
		8616BB9D278EF4B400173F58 /* 剑指 Offer 33. 二叉搜索树的后序遍历序列.mm in Sources */ = {isa = PBXBuildFile; fileRef = 8616BB9C278EF4B400173F58 /* 剑指 Offer 33. 二叉搜索树的后序遍历序列.mm */; };
		86306C4B276DD46C009BFC2B /* LRU缓存机制.mm in Sources */ = {isa = PBXBuildFile; fileRef = 86306C4A276DD46C009BFC2B /* LRU缓存机制.mm */; };
		865D8BB1277B15E0008684B9 /* 剑指 Offer 50. 第一个只出现一次的字符.mm in Sources */ = {isa = PBXBuildFile; fileRef = 865D8BB0277B15E0008684B9 /* 剑指 Offer 50. 第一个只出现一次的字符.mm */; };
		8660B101277D62AA00F3B1BF /* 剑指 Offer 26. 树的子结构.mm in Sources */ = {isa = PBXBuildFile; fileRef = 8660B100277D62AA00F3B1BF /* 剑指 Offer 26. 树的子结构.mm */; };
		8660B103277D89E100F3B1BF /* 剑指 Offer 27. 二叉树的镜像.mm in Sources */ = {isa = PBXBuildFile; fileRef = 8660B102277D89E100F3B1BF /* 剑指 Offer 27. 二叉树的镜像.mm */; };
		8660B105277D8B9500F3B1BF /* 剑指 Offer 28. 对称的二叉树.mm in Sources */ = {isa = PBXBuildFile; fileRef = 8660B104277D8B9500F3B1BF /* 剑指 Offer 28. 对称的二叉树.mm */; };
		8663022E2770BF6B00946B89 /* 121. 买卖股票的最佳时机.mm in Sources */ = {isa = PBXBuildFile; fileRef = 8663022D2770BF6B00946B89 /* 121. 买卖股票的最佳时机.mm */; };
		866AC0402776ABFD00A27148 /* 剑指 Offer 06. 从尾到头打印链表.mm in Sources */ = {isa = PBXBuildFile; fileRef = 866AC03F2776ABFD00A27148 /* 剑指 Offer 06. 从尾到头打印链表.mm */; };
		866AC0422776AD4F00A27148 /* 剑指 Offer 24. 反转链表.mm in Sources */ = {isa = PBXBuildFile; fileRef = 866AC0412776AD4F00A27148 /* 剑指 Offer 24. 反转链表.mm */; };
		866AC0442776AE8F00A27148 /* 剑指 Offer 35. 复杂链表的复制.mm in Sources */ = {isa = PBXBuildFile; fileRef = 866AC0432776AE8F00A27148 /* 剑指 Offer 35. 复杂链表的复制.mm */; };
		866AC0462777392100A27148 /* BinarySearch.mm in Sources */ = {isa = PBXBuildFile; fileRef = 866AC0452777392100A27148 /* BinarySearch.mm */; };
		866AC04927773C9C00A27148 /* x 的平方根.mm in Sources */ = {isa = PBXBuildFile; fileRef = 866AC04827773C9C00A27148 /* x 的平方根.mm */; };
		866AC04B27773F9A00A27148 /* 猜数字大小.mm in Sources */ = {isa = PBXBuildFile; fileRef = 866AC04A27773F9A00A27148 /* 猜数字大小.mm */; };
		866AC04D277741BB00A27148 /* 搜索旋转排序数组.mm in Sources */ = {isa = PBXBuildFile; fileRef = 866AC04C277741BB00A27148 /* 搜索旋转排序数组.mm */; };
		866CE2DE27746E1400D1E401 /* 236. 二叉树的最近公共祖先.mm in Sources */ = {isa = PBXBuildFile; fileRef = 866CE2DD27746E1400D1E401 /* 236. 二叉树的最近公共祖先.mm */; };
		866CE2E02774786500D1E401 /* 200. 岛屿数量.mm in Sources */ = {isa = PBXBuildFile; fileRef = 866CE2DF2774786500D1E401 /* 200. 岛屿数量.mm */; };
		8672D30F277608AE00464A71 /* 剑指 Offer 09. 用两个栈实现队列.mm in Sources */ = {isa = PBXBuildFile; fileRef = 8672D30E277608AE00464A71 /* 剑指 Offer 09. 用两个栈实现队列.mm */; };
		8672D31127760BC700464A71 /* 剑指 Offer 30. 包含min函数的栈.mm in Sources */ = {isa = PBXBuildFile; fileRef = 8672D31027760BC700464A71 /* 剑指 Offer 30. 包含min函数的栈.mm */; };
		867D6C84276CDEE80035EE3A /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 867D6C83276CDEE80035EE3A /* AppDelegate.m */; };
		867D6C87276CDEE80035EE3A /* ViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = 867D6C86276CDEE80035EE3A /* ViewController.m */; };
		867D6C89276CDEE90035EE3A /* Assets.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 867D6C88276CDEE90035EE3A /* Assets.xcassets */; };
		867D6C8C276CDEE90035EE3A /* Main.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 867D6C8A276CDEE90035EE3A /* Main.storyboard */; };
		867D6C8E276CDEE90035EE3A /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 867D6C8D276CDEE90035EE3A /* main.m */; };
		867D6C9C276CDEFF0035EE3A /* LeetCodeTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 867D6C9B276CDEFF0035EE3A /* LeetCodeTests.m */; };
		867D6CA3276CDF2B0035EE3A /* 无重复字符的最长子串.mm in Sources */ = {isa = PBXBuildFile; fileRef = 867D6CA2276CDF2B0035EE3A /* 无重复字符的最长子串.mm */; };
		868948C22777FD9E002B9F5A /* 剑指 Offer 05. 替换空格.mm in Sources */ = {isa = PBXBuildFile; fileRef = 868948C12777FD9E002B9F5A /* 剑指 Offer 05. 替换空格.mm */; };
		868948C427780265002B9F5A /* 剑指 Offer 58 - II. 左旋转字符串.mm in Sources */ = {isa = PBXBuildFile; fileRef = 868948C327780265002B9F5A /* 剑指 Offer 58 - II. 左旋转字符串.mm */; };
		868948C62778203E002B9F5A /* 寻找旋转排序数组中的最小值.mm in Sources */ = {isa = PBXBuildFile; fileRef = 868948C52778203E002B9F5A /* 寻找旋转排序数组中的最小值.mm */; };
		868948C8277878E0002B9F5A /* 在排序数组中查找元素的第一个和最后一个位置.mm in Sources */ = {isa = PBXBuildFile; fileRef = 868948C7277878E0002B9F5A /* 在排序数组中查找元素的第一个和最后一个位置.mm */; };
		868948CA2778AEFD002B9F5A /* 154. 寻找旋转排序数组中的最小值 II.mm in Sources */ = {isa = PBXBuildFile; fileRef = 868948C92778AEFD002B9F5A /* 154. 寻找旋转排序数组中的最小值 II.mm */; };
		86960DF5277C02100026C324 /* 剑指 Offer 32 - I. 从上到下打印二叉树.mm in Sources */ = {isa = PBXBuildFile; fileRef = 86960DF4277C02100026C324 /* 剑指 Offer 32 - I. 从上到下打印二叉树.mm */; };
		86960DF7277C06830026C324 /* 剑指 Offer 32 - II. 从上到下打印二叉树 II .mm in Sources */ = {isa = PBXBuildFile; fileRef = 86960DF6277C06830026C324 /* 剑指 Offer 32 - II. 从上到下打印二叉树 II .mm */; };
		86960DF9277C08C80026C324 /* 剑指 Offer 32 - III. 从上到下打印二叉树 III.mm in Sources */ = {isa = PBXBuildFile; fileRef = 86960DF8277C08C80026C324 /* 剑指 Offer 32 - III. 从上到下打印二叉树 III.mm */; };
		86960E01277E996B0026C324 /* 剑指 Offer 10- I. 斐波那契数列.mm in Sources */ = {isa = PBXBuildFile; fileRef = 86960E00277E996B0026C324 /* 剑指 Offer 10- I. 斐波那契数列.mm */; };
		86960E03277EDD970026C324 /* 剑指 Offer 10- II. 青蛙跳台阶问题.mm in Sources */ = {isa = PBXBuildFile; fileRef = 86960E02277EDD970026C324 /* 剑指 Offer 10- II. 青蛙跳台阶问题.mm */; };
		86960E05277EE1DE0026C324 /* 剑指 Offer 63. 股票的最大利润.mm in Sources */ = {isa = PBXBuildFile; fileRef = 86960E04277EE1DE0026C324 /* 剑指 Offer 63. 股票的最大利润.mm */; };
		86A1CA6D2779FB2700475A59 /* 剑指 Offer 03. 数组中重复的数字.mm in Sources */ = {isa = PBXBuildFile; fileRef = 86A1CA6C2779FB2700475A59 /* 剑指 Offer 03. 数组中重复的数字.mm */; };
		86A1CA6F277A06A000475A59 /* 剑指 Offer 53 - I. 在排序数组中查找数字 I.mm in Sources */ = {isa = PBXBuildFile; fileRef = 86A1CA6E277A06A000475A59 /* 剑指 Offer 53 - I. 在排序数组中查找数字 I.mm */; };
		86A1CA71277A0AEB00475A59 /* 剑指 Offer 53 - II. 0～n-1中缺失的数字.mm in Sources */ = {isa = PBXBuildFile; fileRef = 86A1CA70277A0AEB00475A59 /* 剑指 Offer 53 - II. 0～n-1中缺失的数字.mm */; };
		86B723DC276ECD76009EB4D9 /* QuickSort.mm in Sources */ = {isa = PBXBuildFile; fileRef = 86B723DB276ECD76009EB4D9 /* QuickSort.mm */; };
		86B723DE276F3D36009EB4D9 /* 数组中的第K个最大元素.mm in Sources */ = {isa = PBXBuildFile; fileRef = 86B723DD276F3D36009EB4D9 /* 数组中的第K个最大元素.mm */; };
		86B723E0276F488F009EB4D9 /* 二叉树层次遍历.mm in Sources */ = {isa = PBXBuildFile; fileRef = 86B723DF276F488F009EB4D9 /* 二叉树层次遍历.mm */; };
		86B723E2276F4B53009EB4D9 /* 二叉树的锯齿形层序遍历.mm in Sources */ = {isa = PBXBuildFile; fileRef = 86B723E1276F4B53009EB4D9 /* 二叉树的锯齿形层序遍历.mm */; };
		86C5DBF12786C1A100CAACF6 /* 剑指 Offer 12. 矩阵中的路径.mm in Sources */ = {isa = PBXBuildFile; fileRef = 86C5DBF02786C1A100CAACF6 /* 剑指 Offer 12. 矩阵中的路径.mm */; };
		86C5DBF62786EC0A00CAACF6 /* 剑指 Offer 13. 机器人的运动范围.mm in Sources */ = {isa = PBXBuildFile; fileRef = 86C5DBF52786EC0A00CAACF6 /* 剑指 Offer 13. 机器人的运动范围.mm */; };
		86C5DBFA2787E60300CAACF6 /* 剑指 Offer 34. 二叉树中和为某一值的路径.mm in Sources */ = {isa = PBXBuildFile; fileRef = 86C5DBF92787E60300CAACF6 /* 剑指 Offer 34. 二叉树中和为某一值的路径.mm */; };
		86C5DBFC2787ED7900CAACF6 /* 剑指 Offer 36. 二叉搜索树与双向链表.mm in Sources */ = {isa = PBXBuildFile; fileRef = 86C5DBFB2787ED7900CAACF6 /* 剑指 Offer 36. 二叉搜索树与双向链表.mm */; };
		86C5DBFE27882D8000CAACF6 /* 剑指 Offer 54. 二叉搜索树的第k大节点.mm in Sources */ = {isa = PBXBuildFile; fileRef = 86C5DBFD27882D8000CAACF6 /* 剑指 Offer 54. 二叉搜索树的第k大节点.mm */; };
		86C6CAA7278A8C15007DD88B /* 剑指 Offer 40. 最小的k个数.mm in Sources */ = {isa = PBXBuildFile; fileRef = 86C6CAA6278A8C15007DD88B /* 剑指 Offer 40. 最小的k个数.mm */; };
		86C6CAA9278AFFED007DD88B /* 剑指 Offer 41. 数据流中的中位数.mm in Sources */ = {isa = PBXBuildFile; fileRef = 86C6CAA8278AFFED007DD88B /* 剑指 Offer 41. 数据流中的中位数.mm */; };
		86CA61D62789589700A09EDD /* 剑指 Offer 45. 把数组排成最小的数.mm in Sources */ = {isa = PBXBuildFile; fileRef = 86CA61D52789589700A09EDD /* 剑指 Offer 45. 把数组排成最小的数.mm */; };
		86CA61D827895B9600A09EDD /* 剑指 Offer 61. 扑克牌中的顺子.mm in Sources */ = {isa = PBXBuildFile; fileRef = 86CA61D727895B9500A09EDD /* 剑指 Offer 61. 扑克牌中的顺子.mm */; };
		86DE38B12785665F00D7186B /* 剑指 Offer 21. 调整数组顺序使奇数位于偶数前面.mm in Sources */ = {isa = PBXBuildFile; fileRef = 86DE38B02785665F00D7186B /* 剑指 Offer 21. 调整数组顺序使奇数位于偶数前面.mm */; };
		86DE38B32785697700D7186B /* 剑指 Offer 57. 和为s的两个数字.mm in Sources */ = {isa = PBXBuildFile; fileRef = 86DE38B22785697700D7186B /* 剑指 Offer 57. 和为s的两个数字.mm */; };
		86DE38B527856ACC00D7186B /* 剑指 Offer 58 - I. 翻转单词顺序.mm in Sources */ = {isa = PBXBuildFile; fileRef = 86DE38B427856ACC00D7186B /* 剑指 Offer 58 - I. 翻转单词顺序.mm */; };
		86E88A0F277374EA00FEABFF /* 160. 相交链表.mm in Sources */ = {isa = PBXBuildFile; fileRef = 86E88A0E277374EA00FEABFF /* 160. 相交链表.mm */; };
		86F75BDE2780283200AA4838 /* 剑指 Offer 42. 连续子数组的最大和.mm in Sources */ = {isa = PBXBuildFile; fileRef = 86F75BDD2780283200AA4838 /* 剑指 Offer 42. 连续子数组的最大和.mm */; };
		86F75BE0278030AC00AA4838 /* 剑指 Offer 47. 礼物的最大价值.mm in Sources */ = {isa = PBXBuildFile; fileRef = 86F75BDF278030AC00AA4838 /* 剑指 Offer 47. 礼物的最大价值.mm */; };
		86F75BE22781327500AA4838 /* 剑指 Offer 46. 把数字翻译成字符串.mm in Sources */ = {isa = PBXBuildFile; fileRef = 86F75BE12781327500AA4838 /* 剑指 Offer 46. 把数字翻译成字符串.mm */; };
		86F75BE42781D28B00AA4838 /* 剑指 Offer 48. 最长不含重复字符的子字符串.mm in Sources */ = {isa = PBXBuildFile; fileRef = 86F75BE32781D28B00AA4838 /* 剑指 Offer 48. 最长不含重复字符的子字符串.mm */; };
		86F75BE6278278EA00AA4838 /* 剑指 Offer 18. 删除链表的节点.mm in Sources */ = {isa = PBXBuildFile; fileRef = 86F75BE5278278EA00AA4838 /* 剑指 Offer 18. 删除链表的节点.mm */; };
		86F75BE827827A2B00AA4838 /* 剑指 Offer 22. 链表中倒数第k个节点.mm in Sources */ = {isa = PBXBuildFile; fileRef = 86F75BE727827A2B00AA4838 /* 剑指 Offer 22. 链表中倒数第k个节点.mm */; };
		86F75BEE2783F46200AA4838 /* 剑指 Offer 25. 合并两个排序的链表.mm in Sources */ = {isa = PBXBuildFile; fileRef = 86F75BED2783F46200AA4838 /* 剑指 Offer 25. 合并两个排序的链表.mm */; };
		86F75BF02783F5C900AA4838 /* 剑指 Offer 52. 两个链表的第一个公共节点.mm in Sources */ = {isa = PBXBuildFile; fileRef = 86F75BEF2783F5C900AA4838 /* 剑指 Offer 52. 两个链表的第一个公共节点.mm */; };
		FE1DB813278FF3E40010B4F2 /* 剑指 Offer 15. 二进制中1的个数.mm in Sources */ = {isa = PBXBuildFile; fileRef = FE1DB812278FF3E40010B4F2 /* 剑指 Offer 15. 二进制中1的个数.mm */; };
		FE1DB815278FFE170010B4F2 /* 剑指 Offer 65. 不用加减乘除做加法 .mm in Sources */ = {isa = PBXBuildFile; fileRef = FE1DB814278FFE160010B4F2 /* 剑指 Offer 65. 不用加减乘除做加法 .mm */; };
		FE1DB81727900D670010B4F2 /* 两数相加.mm in Sources */ = {isa = PBXBuildFile; fileRef = FE1DB81627900D670010B4F2 /* 两数相加.mm */; };
		FE4EA8B627917FAF005963BD /* 剑指 Offer 56 - I. 数组中数字出现的次数.mm in Sources */ = {isa = PBXBuildFile; fileRef = FE4EA8B527917FAF005963BD /* 剑指 Offer 56 - I. 数组中数字出现的次数.mm */; };
		FE60930727A0411600A68E60 /* 删除排序数组中的重复项.mm in Sources */ = {isa = PBXBuildFile; fileRef = FE60930627A0411600A68E60 /* 删除排序数组中的重复项.mm */; };
		FE60930927A0446C00A68E60 /* 买卖股票的最佳时机 II.mm in Sources */ = {isa = PBXBuildFile; fileRef = FE60930827A0446C00A68E60 /* 买卖股票的最佳时机 II.mm */; };
		FE7AC54627918E2700CE782E /* 剑指 Offer 56 - II. 数组中数字出现的次数 II .mm in Sources */ = {isa = PBXBuildFile; fileRef = FE7AC54527918E2700CE782E /* 剑指 Offer 56 - II. 数组中数字出现的次数 II .mm */; };
		FE85D8B427A4353700A2A684 /* 两个数组的交集 II.mm in Sources */ = {isa = PBXBuildFile; fileRef = FE85D8B327A4353700A2A684 /* 两个数组的交集 II.mm */; };
		FEB4F00D279848FE00826907 /* 剑指 Offer 59 - I. 滑动窗口的最大值.mm in Sources */ = {isa = PBXBuildFile; fileRef = FEB4F00C279848FE00826907 /* 剑指 Offer 59 - I. 滑动窗口的最大值.mm */; };
		FEB4F0182799A76D00826907 /* 剑指 Offer 59 - II. 队列的最大值 .mm in Sources */ = {isa = PBXBuildFile; fileRef = FEB4F0172799A76D00826907 /* 剑指 Offer 59 - II. 队列的最大值 .mm */; };
		FEB4F033279BFC3300826907 /* 剑指 Offer 37. 序列化二叉树 .mm in Sources */ = {isa = PBXBuildFile; fileRef = FEB4F032279BFC3300826907 /* 剑指 Offer 37. 序列化二叉树 .mm */; };
		FEB4F035279C266E00826907 /* 剑指 Offer 17. 打印从1到最大的n位数.mm in Sources */ = {isa = PBXBuildFile; fileRef = FEB4F034279C266E00826907 /* 剑指 Offer 17. 打印从1到最大的n位数.mm */; };
		FEB4F037279C28D100826907 /* 剑指 Offer 51. 数组中的逆序对 .mm in Sources */ = {isa = PBXBuildFile; fileRef = FEB4F036279C28D100826907 /* 剑指 Offer 51. 数组中的逆序对 .mm */; };
		FEB4F039279C30A700826907 /* MergeSort.mm in Sources */ = {isa = PBXBuildFile; fileRef = FEB4F038279C30A700826907 /* MergeSort.mm */; };
		FEC2FD7927AC049300885574 /* 加一 .mm in Sources */ = {isa = PBXBuildFile; fileRef = FEC2FD7827AC049300885574 /* 加一 .mm */; };
		FEC2FD7B27AC0AD300885574 /* 移动零.mm in Sources */ = {isa = PBXBuildFile; fileRef = FEC2FD7A27AC0AD300885574 /* 移动零.mm */; };
		FEC2FD7D27AC100800885574 /* 有效的数独 .mm in Sources */ = {isa = PBXBuildFile; fileRef = FEC2FD7C27AC100800885574 /* 有效的数独 .mm */; };
		FEC2FD7F27AC222300885574 /* 旋转图像.mm in Sources */ = {isa = PBXBuildFile; fileRef = FEC2FD7E27AC222300885574 /* 旋转图像.mm */; };
		FEC2FE0927AD4C7900885574 /* 整数反转.mm in Sources */ = {isa = PBXBuildFile; fileRef = FEC2FE0827AD4C7900885574 /* 整数反转.mm */; };
		FEC2FE0B27AD6F4400885574 /* 字符串中的第一个唯一字符.mm in Sources */ = {isa = PBXBuildFile; fileRef = FEC2FE0A27AD6F4400885574 /* 字符串中的第一个唯一字符.mm */; };
		FEC2FE0D27AD746200885574 /* 有效的字母异位词.mm in Sources */ = {isa = PBXBuildFile; fileRef = FEC2FE0C27AD746200885574 /* 有效的字母异位词.mm */; };
		FEC2FE0F27AE089300885574 /* 验证回文串.mm in Sources */ = {isa = PBXBuildFile; fileRef = FEC2FE0E27AE089300885574 /* 验证回文串.mm */; };
		FEC2FE1127AE0D8F00885574 /* 字符串转换整数 (atoi) .mm in Sources */ = {isa = PBXBuildFile; fileRef = FEC2FE1027AE0D8F00885574 /* 字符串转换整数 (atoi) .mm */; };
		FEC2FE1327AE4D4700885574 /* 外观数列.mm in Sources */ = {isa = PBXBuildFile; fileRef = FEC2FE1227AE4D4700885574 /* 外观数列.mm */; };
		FEC2FE1527AE52CF00885574 /* 最长公共前缀.mm in Sources */ = {isa = PBXBuildFile; fileRef = FEC2FE1427AE52CF00885574 /* 最长公共前缀.mm */; };
		FED9B19227943F42008412D6 /* 剑指 Offer 39. 数组中出现次数超过一半的数字.mm in Sources */ = {isa = PBXBuildFile; fileRef = FED9B19127943F41008412D6 /* 剑指 Offer 39. 数组中出现次数超过一半的数字.mm */; };
		FED9B194279444F3008412D6 /* 剑指 Offer 66. 构建乘积数组.mm in Sources */ = {isa = PBXBuildFile; fileRef = FED9B193279444F3008412D6 /* 剑指 Offer 66. 构建乘积数组.mm */; };
		FED9B1962794493D008412D6 /* 剑指 Offer 14- I. 剪绳子 .mm in Sources */ = {isa = PBXBuildFile; fileRef = FED9B1952794493D008412D6 /* 剑指 Offer 14- I. 剪绳子 .mm */; };
		FED9B198279463AB008412D6 /* 剑指 Offer 57 - II. 和为s的连续正数序列 .mm in Sources */ = {isa = PBXBuildFile; fileRef = FED9B197279463AB008412D6 /* 剑指 Offer 57 - II. 和为s的连续正数序列 .mm */; };
		FED9B1A1279552BB008412D6 /* 剑指 Offer 29. 顺时针打印矩阵 .mm in Sources */ = {isa = PBXBuildFile; fileRef = FED9B1A0279552BB008412D6 /* 剑指 Offer 29. 顺时针打印矩阵 .mm */; };
		FED9B1B42796C2AA008412D6 /* 剑指 Offer 31. 栈的压入、弹出序列 .mm in Sources */ = {isa = PBXBuildFile; fileRef = FED9B1B32796C2AA008412D6 /* 剑指 Offer 31. 栈的压入、弹出序列 .mm */; };
		FED9B1B62796C8E4008412D6 /* 剑指 Offer 20. 表示数值的字符串.mm in Sources */ = {isa = PBXBuildFile; fileRef = FED9B1B52796C8E4008412D6 /* 剑指 Offer 20. 表示数值的字符串.mm */; };
		FEEB5FF727A2DAEE0045E12F /* 旋转数组.mm in Sources */ = {isa = PBXBuildFile; fileRef = FEEB5FF627A2DAEE0045E12F /* 旋转数组.mm */; };
		FEEB5FF927A2E4EE0045E12F /* 存在重复元素.mm in Sources */ = {isa = PBXBuildFile; fileRef = FEEB5FF827A2E4EE0045E12F /* 存在重复元素.mm */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		867D6C9D276CDEFF0035EE3A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 867D6C77276CDEE80035EE3A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 867D6C7E276CDEE80035EE3A;
			remoteInfo = LeetCode;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		860F233E2772146F00A1713E /* 15.三数之和.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "15.三数之和.mm"; sourceTree = "<group>"; };
		86116E6E277CA6B700598177 /* Pow202112291022.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = Pow202112291022.mm; sourceTree = "<group>"; };
		8616BB75278BC98F00173F58 /* 剑指 Offer 55 - I. 二叉树的深度.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 55 - I. 二叉树的深度.mm"; sourceTree = "<group>"; };
		8616BB77278BCB2F00173F58 /* 剑指 Offer 55 - II. 平衡二叉树.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 55 - II. 平衡二叉树.mm"; sourceTree = "<group>"; };
		8616BB79278D4AEB00173F58 /* 剑指 Offer 68 - I. 二叉搜索树的最近公共祖先.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 68 - I. 二叉搜索树的最近公共祖先.mm"; sourceTree = "<group>"; };
		8616BB7B278D4C8000173F58 /* 剑指 Offer 68 - II. 二叉树的最近公共祖先.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 68 - II. 二叉树的最近公共祖先.mm"; sourceTree = "<group>"; };
		8616BB80278D6B5300173F58 /* LinkList202201111537.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = LinkList202201111537.mm; sourceTree = "<group>"; };
		8616BB82278D795700173F58 /* 环形链表.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "环形链表.mm"; sourceTree = "<group>"; };
		8616BB84278D7BEA00173F58 /* 环形链表 II.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "环形链表 II.mm"; sourceTree = "<group>"; };
		8616BB86278D863B00173F58 /* 相交链表.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "相交链表.mm"; sourceTree = "<group>"; };
		8616BB88278D885300173F58 /* 删除链表的倒数第N个节点.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "删除链表的倒数第N个节点.mm"; sourceTree = "<group>"; };
		8616BB8A278D924800173F58 /* 移除链表元素.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "移除链表元素.mm"; sourceTree = "<group>"; };
		8616BB8C278DB56700173F58 /* 奇偶链表.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "奇偶链表.mm"; sourceTree = "<group>"; };
		8616BB92278ECE2700173F58 /* 234. 回文链表.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "234. 回文链表.mm"; sourceTree = "<group>"; };
		8616BB98278EE15A00173F58 /* 剑指 Offer 07. 重建二叉树.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 07. 重建二叉树.mm"; sourceTree = "<group>"; };
		8616BB9A278EEE1D00173F58 /* 剑指 Offer 16. 数值的整数次方.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 16. 数值的整数次方.mm"; sourceTree = "<group>"; };
		8616BB9C278EF4B400173F58 /* 剑指 Offer 33. 二叉搜索树的后序遍历序列.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 33. 二叉搜索树的后序遍历序列.mm"; sourceTree = "<group>"; };
		86306C4A276DD46C009BFC2B /* LRU缓存机制.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "LRU缓存机制.mm"; sourceTree = "<group>"; };
		865D8BB0277B15E0008684B9 /* 剑指 Offer 50. 第一个只出现一次的字符.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 50. 第一个只出现一次的字符.mm"; sourceTree = "<group>"; };
		8660B100277D62AA00F3B1BF /* 剑指 Offer 26. 树的子结构.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 26. 树的子结构.mm"; sourceTree = "<group>"; };
		8660B102277D89E100F3B1BF /* 剑指 Offer 27. 二叉树的镜像.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 27. 二叉树的镜像.mm"; sourceTree = "<group>"; };
		8660B104277D8B9500F3B1BF /* 剑指 Offer 28. 对称的二叉树.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 28. 对称的二叉树.mm"; sourceTree = "<group>"; };
		8663022D2770BF6B00946B89 /* 121. 买卖股票的最佳时机.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "121. 买卖股票的最佳时机.mm"; sourceTree = "<group>"; };
		866AC03F2776ABFD00A27148 /* 剑指 Offer 06. 从尾到头打印链表.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 06. 从尾到头打印链表.mm"; sourceTree = "<group>"; };
		866AC0412776AD4F00A27148 /* 剑指 Offer 24. 反转链表.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 24. 反转链表.mm"; sourceTree = "<group>"; };
		866AC0432776AE8F00A27148 /* 剑指 Offer 35. 复杂链表的复制.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 35. 复杂链表的复制.mm"; sourceTree = "<group>"; };
		866AC0452777392100A27148 /* BinarySearch.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = BinarySearch.mm; sourceTree = "<group>"; };
		866AC04827773C9C00A27148 /* x 的平方根.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "x 的平方根.mm"; sourceTree = "<group>"; };
		866AC04A27773F9A00A27148 /* 猜数字大小.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "猜数字大小.mm"; sourceTree = "<group>"; };
		866AC04C277741BB00A27148 /* 搜索旋转排序数组.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "搜索旋转排序数组.mm"; sourceTree = "<group>"; };
		866CE2DD27746E1400D1E401 /* 236. 二叉树的最近公共祖先.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "236. 二叉树的最近公共祖先.mm"; sourceTree = "<group>"; };
		866CE2DF2774786500D1E401 /* 200. 岛屿数量.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "200. 岛屿数量.mm"; sourceTree = "<group>"; };
		8672D30E277608AE00464A71 /* 剑指 Offer 09. 用两个栈实现队列.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 09. 用两个栈实现队列.mm"; sourceTree = "<group>"; };
		8672D31027760BC700464A71 /* 剑指 Offer 30. 包含min函数的栈.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 30. 包含min函数的栈.mm"; sourceTree = "<group>"; };
		867D6C7F276CDEE80035EE3A /* LeetCode.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = LeetCode.app; sourceTree = BUILT_PRODUCTS_DIR; };
		867D6C82276CDEE80035EE3A /* AppDelegate.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = AppDelegate.h; sourceTree = "<group>"; };
		867D6C83276CDEE80035EE3A /* AppDelegate.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = AppDelegate.m; sourceTree = "<group>"; };
		867D6C85276CDEE80035EE3A /* ViewController.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = ViewController.h; sourceTree = "<group>"; };
		867D6C86276CDEE80035EE3A /* ViewController.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = ViewController.m; sourceTree = "<group>"; };
		867D6C88276CDEE90035EE3A /* Assets.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; path = Assets.xcassets; sourceTree = "<group>"; };
		867D6C8B276CDEE90035EE3A /* Base */ = {isa = PBXFileReference; lastKnownFileType = file.storyboard; name = Base; path = Base.lproj/Main.storyboard; sourceTree = "<group>"; };
		867D6C8D276CDEE90035EE3A /* main.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = main.m; sourceTree = "<group>"; };
		867D6C8F276CDEE90035EE3A /* LeetCode.entitlements */ = {isa = PBXFileReference; lastKnownFileType = text.plist.entitlements; path = LeetCode.entitlements; sourceTree = "<group>"; };
		867D6C99276CDEFF0035EE3A /* LeetCodeTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = LeetCodeTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
		867D6C9B276CDEFF0035EE3A /* LeetCodeTests.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = LeetCodeTests.m; sourceTree = "<group>"; };
		867D6CA2276CDF2B0035EE3A /* 无重复字符的最长子串.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "无重复字符的最长子串.mm"; sourceTree = "<group>"; };
		868948C12777FD9E002B9F5A /* 剑指 Offer 05. 替换空格.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 05. 替换空格.mm"; sourceTree = "<group>"; };
		868948C327780265002B9F5A /* 剑指 Offer 58 - II. 左旋转字符串.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 58 - II. 左旋转字符串.mm"; sourceTree = "<group>"; };
		868948C52778203E002B9F5A /* 寻找旋转排序数组中的最小值.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "寻找旋转排序数组中的最小值.mm"; sourceTree = "<group>"; };
		868948C7277878E0002B9F5A /* 在排序数组中查找元素的第一个和最后一个位置.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "在排序数组中查找元素的第一个和最后一个位置.mm"; sourceTree = "<group>"; };
		868948C92778AEFD002B9F5A /* 154. 寻找旋转排序数组中的最小值 II.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "154. 寻找旋转排序数组中的最小值 II.mm"; sourceTree = "<group>"; };
		86960DF4277C02100026C324 /* 剑指 Offer 32 - I. 从上到下打印二叉树.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 32 - I. 从上到下打印二叉树.mm"; sourceTree = "<group>"; };
		86960DF6277C06830026C324 /* 剑指 Offer 32 - II. 从上到下打印二叉树 II .mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 32 - II. 从上到下打印二叉树 II .mm"; sourceTree = "<group>"; };
		86960DF8277C08C80026C324 /* 剑指 Offer 32 - III. 从上到下打印二叉树 III.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 32 - III. 从上到下打印二叉树 III.mm"; sourceTree = "<group>"; };
		86960E00277E996B0026C324 /* 剑指 Offer 10- I. 斐波那契数列.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 10- I. 斐波那契数列.mm"; sourceTree = "<group>"; };
		86960E02277EDD970026C324 /* 剑指 Offer 10- II. 青蛙跳台阶问题.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 10- II. 青蛙跳台阶问题.mm"; sourceTree = "<group>"; };
		86960E04277EE1DE0026C324 /* 剑指 Offer 63. 股票的最大利润.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 63. 股票的最大利润.mm"; sourceTree = "<group>"; };
		86A1CA6C2779FB2700475A59 /* 剑指 Offer 03. 数组中重复的数字.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 03. 数组中重复的数字.mm"; sourceTree = "<group>"; };
		86A1CA6E277A06A000475A59 /* 剑指 Offer 53 - I. 在排序数组中查找数字 I.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 53 - I. 在排序数组中查找数字 I.mm"; sourceTree = "<group>"; };
		86A1CA70277A0AEB00475A59 /* 剑指 Offer 53 - II. 0～n-1中缺失的数字.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 53 - II. 0～n-1中缺失的数字.mm"; sourceTree = "<group>"; };
		86B723DB276ECD76009EB4D9 /* QuickSort.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = QuickSort.mm; sourceTree = "<group>"; };
		86B723DD276F3D36009EB4D9 /* 数组中的第K个最大元素.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "数组中的第K个最大元素.mm"; sourceTree = "<group>"; };
		86B723DF276F488F009EB4D9 /* 二叉树层次遍历.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "二叉树层次遍历.mm"; sourceTree = "<group>"; };
		86B723E1276F4B53009EB4D9 /* 二叉树的锯齿形层序遍历.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "二叉树的锯齿形层序遍历.mm"; sourceTree = "<group>"; };
		86C5DBF02786C1A100CAACF6 /* 剑指 Offer 12. 矩阵中的路径.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 12. 矩阵中的路径.mm"; sourceTree = "<group>"; };
		86C5DBF52786EC0A00CAACF6 /* 剑指 Offer 13. 机器人的运动范围.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 13. 机器人的运动范围.mm"; sourceTree = "<group>"; };
		86C5DBF92787E60300CAACF6 /* 剑指 Offer 34. 二叉树中和为某一值的路径.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 34. 二叉树中和为某一值的路径.mm"; sourceTree = "<group>"; };
		86C5DBFB2787ED7900CAACF6 /* 剑指 Offer 36. 二叉搜索树与双向链表.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 36. 二叉搜索树与双向链表.mm"; sourceTree = "<group>"; };
		86C5DBFD27882D8000CAACF6 /* 剑指 Offer 54. 二叉搜索树的第k大节点.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 54. 二叉搜索树的第k大节点.mm"; sourceTree = "<group>"; };
		86C6CAA6278A8C15007DD88B /* 剑指 Offer 40. 最小的k个数.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 40. 最小的k个数.mm"; sourceTree = "<group>"; };
		86C6CAA8278AFFED007DD88B /* 剑指 Offer 41. 数据流中的中位数.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 41. 数据流中的中位数.mm"; sourceTree = "<group>"; };
		86CA61D52789589700A09EDD /* 剑指 Offer 45. 把数组排成最小的数.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 45. 把数组排成最小的数.mm"; sourceTree = "<group>"; };
		86CA61D727895B9500A09EDD /* 剑指 Offer 61. 扑克牌中的顺子.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 61. 扑克牌中的顺子.mm"; sourceTree = "<group>"; };
		86DE38B02785665F00D7186B /* 剑指 Offer 21. 调整数组顺序使奇数位于偶数前面.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 21. 调整数组顺序使奇数位于偶数前面.mm"; sourceTree = "<group>"; };
		86DE38B22785697700D7186B /* 剑指 Offer 57. 和为s的两个数字.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 57. 和为s的两个数字.mm"; sourceTree = "<group>"; };
		86DE38B427856ACC00D7186B /* 剑指 Offer 58 - I. 翻转单词顺序.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 58 - I. 翻转单词顺序.mm"; sourceTree = "<group>"; };
		86E88A0E277374EA00FEABFF /* 160. 相交链表.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "160. 相交链表.mm"; sourceTree = "<group>"; };
		86F75BDD2780283200AA4838 /* 剑指 Offer 42. 连续子数组的最大和.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 42. 连续子数组的最大和.mm"; sourceTree = "<group>"; };
		86F75BDF278030AC00AA4838 /* 剑指 Offer 47. 礼物的最大价值.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 47. 礼物的最大价值.mm"; sourceTree = "<group>"; };
		86F75BE12781327500AA4838 /* 剑指 Offer 46. 把数字翻译成字符串.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 46. 把数字翻译成字符串.mm"; sourceTree = "<group>"; };
		86F75BE32781D28B00AA4838 /* 剑指 Offer 48. 最长不含重复字符的子字符串.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 48. 最长不含重复字符的子字符串.mm"; sourceTree = "<group>"; };
		86F75BE5278278EA00AA4838 /* 剑指 Offer 18. 删除链表的节点.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 18. 删除链表的节点.mm"; sourceTree = "<group>"; };
		86F75BE727827A2B00AA4838 /* 剑指 Offer 22. 链表中倒数第k个节点.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 22. 链表中倒数第k个节点.mm"; sourceTree = "<group>"; };
		86F75BED2783F46200AA4838 /* 剑指 Offer 25. 合并两个排序的链表.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 25. 合并两个排序的链表.mm"; sourceTree = "<group>"; };
		86F75BEF2783F5C900AA4838 /* 剑指 Offer 52. 两个链表的第一个公共节点.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 52. 两个链表的第一个公共节点.mm"; sourceTree = "<group>"; };
		FE1DB812278FF3E40010B4F2 /* 剑指 Offer 15. 二进制中1的个数.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 15. 二进制中1的个数.mm"; sourceTree = "<group>"; };
		FE1DB814278FFE160010B4F2 /* 剑指 Offer 65. 不用加减乘除做加法 .mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 65. 不用加减乘除做加法 .mm"; sourceTree = "<group>"; };
		FE1DB81627900D670010B4F2 /* 两数相加.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "两数相加.mm"; sourceTree = "<group>"; };
		FE4EA8B527917FAF005963BD /* 剑指 Offer 56 - I. 数组中数字出现的次数.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 56 - I. 数组中数字出现的次数.mm"; sourceTree = "<group>"; };
		FE60930627A0411600A68E60 /* 删除排序数组中的重复项.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "删除排序数组中的重复项.mm"; sourceTree = "<group>"; };
		FE60930827A0446C00A68E60 /* 买卖股票的最佳时机 II.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "买卖股票的最佳时机 II.mm"; sourceTree = "<group>"; };
		FE7AC54527918E2700CE782E /* 剑指 Offer 56 - II. 数组中数字出现的次数 II .mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 56 - II. 数组中数字出现的次数 II .mm"; sourceTree = "<group>"; };
		FE85D8B327A4353700A2A684 /* 两个数组的交集 II.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "两个数组的交集 II.mm"; sourceTree = "<group>"; };
		FEB4F00C279848FE00826907 /* 剑指 Offer 59 - I. 滑动窗口的最大值.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 59 - I. 滑动窗口的最大值.mm"; sourceTree = "<group>"; };
		FEB4F0172799A76D00826907 /* 剑指 Offer 59 - II. 队列的最大值 .mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 59 - II. 队列的最大值 .mm"; sourceTree = "<group>"; };
		FEB4F032279BFC3300826907 /* 剑指 Offer 37. 序列化二叉树 .mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 37. 序列化二叉树 .mm"; sourceTree = "<group>"; };
		FEB4F034279C266E00826907 /* 剑指 Offer 17. 打印从1到最大的n位数.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 17. 打印从1到最大的n位数.mm"; sourceTree = "<group>"; };
		FEB4F036279C28D100826907 /* 剑指 Offer 51. 数组中的逆序对 .mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 51. 数组中的逆序对 .mm"; sourceTree = "<group>"; };
		FEB4F038279C30A700826907 /* MergeSort.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = MergeSort.mm; sourceTree = "<group>"; };
		FEC2FD7827AC049300885574 /* 加一 .mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "加一 .mm"; sourceTree = "<group>"; };
		FEC2FD7A27AC0AD300885574 /* 移动零.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "移动零.mm"; sourceTree = "<group>"; };
		FEC2FD7C27AC100800885574 /* 有效的数独 .mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "有效的数独 .mm"; sourceTree = "<group>"; };
		FEC2FD7E27AC222300885574 /* 旋转图像.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "旋转图像.mm"; sourceTree = "<group>"; };
		FEC2FE0827AD4C7900885574 /* 整数反转.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "整数反转.mm"; sourceTree = "<group>"; };
		FEC2FE0A27AD6F4400885574 /* 字符串中的第一个唯一字符.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "字符串中的第一个唯一字符.mm"; sourceTree = "<group>"; };
		FEC2FE0C27AD746200885574 /* 有效的字母异位词.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "有效的字母异位词.mm"; sourceTree = "<group>"; };
		FEC2FE0E27AE089300885574 /* 验证回文串.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "验证回文串.mm"; sourceTree = "<group>"; };
		FEC2FE1027AE0D8F00885574 /* 字符串转换整数 (atoi) .mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "字符串转换整数 (atoi) .mm"; sourceTree = "<group>"; };
		FEC2FE1227AE4D4700885574 /* 外观数列.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "外观数列.mm"; sourceTree = "<group>"; };
		FEC2FE1427AE52CF00885574 /* 最长公共前缀.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "最长公共前缀.mm"; sourceTree = "<group>"; };
		FED9B19127943F41008412D6 /* 剑指 Offer 39. 数组中出现次数超过一半的数字.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 39. 数组中出现次数超过一半的数字.mm"; sourceTree = "<group>"; };
		FED9B193279444F3008412D6 /* 剑指 Offer 66. 构建乘积数组.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 66. 构建乘积数组.mm"; sourceTree = "<group>"; };
		FED9B1952794493D008412D6 /* 剑指 Offer 14- I. 剪绳子 .mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 14- I. 剪绳子 .mm"; sourceTree = "<group>"; };
		FED9B197279463AB008412D6 /* 剑指 Offer 57 - II. 和为s的连续正数序列 .mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 57 - II. 和为s的连续正数序列 .mm"; sourceTree = "<group>"; };
		FED9B1A0279552BB008412D6 /* 剑指 Offer 29. 顺时针打印矩阵 .mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 29. 顺时针打印矩阵 .mm"; sourceTree = "<group>"; };
		FED9B1B32796C2AA008412D6 /* 剑指 Offer 31. 栈的压入、弹出序列 .mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 31. 栈的压入、弹出序列 .mm"; sourceTree = "<group>"; };
		FED9B1B52796C8E4008412D6 /* 剑指 Offer 20. 表示数值的字符串.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "剑指 Offer 20. 表示数值的字符串.mm"; sourceTree = "<group>"; };
		FEEB5FF627A2DAEE0045E12F /* 旋转数组.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "旋转数组.mm"; sourceTree = "<group>"; };
		FEEB5FF827A2E4EE0045E12F /* 存在重复元素.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; path = "存在重复元素.mm"; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		867D6C7C276CDEE80035EE3A /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		867D6C96276CDEFF0035EE3A /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		8616BB7F278D6B1000173F58 /* 链表 */ = {
			isa = PBXGroup;
			children = (
				8616BB80278D6B5300173F58 /* LinkList202201111537.mm */,
				8616BB82278D795700173F58 /* 环形链表.mm */,
				8616BB84278D7BEA00173F58 /* 环形链表 II.mm */,
				8616BB86278D863B00173F58 /* 相交链表.mm */,
				8616BB88278D885300173F58 /* 删除链表的倒数第N个节点.mm */,
				8616BB8A278D924800173F58 /* 移除链表元素.mm */,
				8616BB8C278DB56700173F58 /* 奇偶链表.mm */,
				8616BB92278ECE2700173F58 /* 234. 回文链表.mm */,
				FE1DB81627900D670010B4F2 /* 两数相加.mm */,
			);
			path = "链表";
			sourceTree = "<group>";
		};
		866AC04727773C7300A27148 /* 二分查找 */ = {
			isa = PBXGroup;
			children = (
				866AC0452777392100A27148 /* BinarySearch.mm */,
				866AC04827773C9C00A27148 /* x 的平方根.mm */,
				866AC04A27773F9A00A27148 /* 猜数字大小.mm */,
				866AC04C277741BB00A27148 /* 搜索旋转排序数组.mm */,
				868948C52778203E002B9F5A /* 寻找旋转排序数组中的最小值.mm */,
				868948C7277878E0002B9F5A /* 在排序数组中查找元素的第一个和最后一个位置.mm */,
				868948C92778AEFD002B9F5A /* 154. 寻找旋转排序数组中的最小值 II.mm */,
				86116E6E277CA6B700598177 /* Pow202112291022.mm */,
			);
			path = "二分查找";
			sourceTree = "<group>";
		};
		8672D30D2776087C00464A71 /* 剑指offer */ = {
			isa = PBXGroup;
			children = (
				86A1CA6C2779FB2700475A59 /* 剑指 Offer 03. 数组中重复的数字.mm */,
				868948C12777FD9E002B9F5A /* 剑指 Offer 05. 替换空格.mm */,
				866AC03F2776ABFD00A27148 /* 剑指 Offer 06. 从尾到头打印链表.mm */,
				8616BB98278EE15A00173F58 /* 剑指 Offer 07. 重建二叉树.mm */,
				8672D30E277608AE00464A71 /* 剑指 Offer 09. 用两个栈实现队列.mm */,
				86960E00277E996B0026C324 /* 剑指 Offer 10- I. 斐波那契数列.mm */,
				86960E02277EDD970026C324 /* 剑指 Offer 10- II. 青蛙跳台阶问题.mm */,
				86C5DBF02786C1A100CAACF6 /* 剑指 Offer 12. 矩阵中的路径.mm */,
				86C5DBF52786EC0A00CAACF6 /* 剑指 Offer 13. 机器人的运动范围.mm */,
				8616BB9A278EEE1D00173F58 /* 剑指 Offer 16. 数值的整数次方.mm */,
				86F75BE5278278EA00AA4838 /* 剑指 Offer 18. 删除链表的节点.mm */,
				86DE38B02785665F00D7186B /* 剑指 Offer 21. 调整数组顺序使奇数位于偶数前面.mm */,
				86F75BE727827A2B00AA4838 /* 剑指 Offer 22. 链表中倒数第k个节点.mm */,
				866AC0412776AD4F00A27148 /* 剑指 Offer 24. 反转链表.mm */,
				86F75BED2783F46200AA4838 /* 剑指 Offer 25. 合并两个排序的链表.mm */,
				8660B100277D62AA00F3B1BF /* 剑指 Offer 26. 树的子结构.mm */,
				8660B102277D89E100F3B1BF /* 剑指 Offer 27. 二叉树的镜像.mm */,
				8660B104277D8B9500F3B1BF /* 剑指 Offer 28. 对称的二叉树.mm */,
				8672D31027760BC700464A71 /* 剑指 Offer 30. 包含min函数的栈.mm */,
				86960DF4277C02100026C324 /* 剑指 Offer 32 - I. 从上到下打印二叉树.mm */,
				86960DF6277C06830026C324 /* 剑指 Offer 32 - II. 从上到下打印二叉树 II .mm */,
				86960DF8277C08C80026C324 /* 剑指 Offer 32 - III. 从上到下打印二叉树 III.mm */,
				86C5DBF92787E60300CAACF6 /* 剑指 Offer 34. 二叉树中和为某一值的路径.mm */,
				866AC0432776AE8F00A27148 /* 剑指 Offer 35. 复杂链表的复制.mm */,
				86C5DBFB2787ED7900CAACF6 /* 剑指 Offer 36. 二叉搜索树与双向链表.mm */,
				86C6CAA6278A8C15007DD88B /* 剑指 Offer 40. 最小的k个数.mm */,
				86C6CAA8278AFFED007DD88B /* 剑指 Offer 41. 数据流中的中位数.mm */,
				86F75BDD2780283200AA4838 /* 剑指 Offer 42. 连续子数组的最大和.mm */,
				86CA61D52789589700A09EDD /* 剑指 Offer 45. 把数组排成最小的数.mm */,
				86F75BE12781327500AA4838 /* 剑指 Offer 46. 把数字翻译成字符串.mm */,
				86F75BDF278030AC00AA4838 /* 剑指 Offer 47. 礼物的最大价值.mm */,
				86F75BE32781D28B00AA4838 /* 剑指 Offer 48. 最长不含重复字符的子字符串.mm */,
				865D8BB0277B15E0008684B9 /* 剑指 Offer 50. 第一个只出现一次的字符.mm */,
				86F75BEF2783F5C900AA4838 /* 剑指 Offer 52. 两个链表的第一个公共节点.mm */,
				86A1CA6E277A06A000475A59 /* 剑指 Offer 53 - I. 在排序数组中查找数字 I.mm */,
				86A1CA70277A0AEB00475A59 /* 剑指 Offer 53 - II. 0～n-1中缺失的数字.mm */,
				86C5DBFD27882D8000CAACF6 /* 剑指 Offer 54. 二叉搜索树的第k大节点.mm */,
				8616BB75278BC98F00173F58 /* 剑指 Offer 55 - I. 二叉树的深度.mm */,
				8616BB77278BCB2F00173F58 /* 剑指 Offer 55 - II. 平衡二叉树.mm */,
				86DE38B22785697700D7186B /* 剑指 Offer 57. 和为s的两个数字.mm */,
				86DE38B427856ACC00D7186B /* 剑指 Offer 58 - I. 翻转单词顺序.mm */,
				868948C327780265002B9F5A /* 剑指 Offer 58 - II. 左旋转字符串.mm */,
				86CA61D727895B9500A09EDD /* 剑指 Offer 61. 扑克牌中的顺子.mm */,
				86960E04277EE1DE0026C324 /* 剑指 Offer 63. 股票的最大利润.mm */,
				8616BB79278D4AEB00173F58 /* 剑指 Offer 68 - I. 二叉搜索树的最近公共祖先.mm */,
				8616BB7B278D4C8000173F58 /* 剑指 Offer 68 - II. 二叉树的最近公共祖先.mm */,
				8616BB9C278EF4B400173F58 /* 剑指 Offer 33. 二叉搜索树的后序遍历序列.mm */,
				FE1DB812278FF3E40010B4F2 /* 剑指 Offer 15. 二进制中1的个数.mm */,
				FE1DB814278FFE160010B4F2 /* 剑指 Offer 65. 不用加减乘除做加法 .mm */,
				FE4EA8B527917FAF005963BD /* 剑指 Offer 56 - I. 数组中数字出现的次数.mm */,
				FE7AC54527918E2700CE782E /* 剑指 Offer 56 - II. 数组中数字出现的次数 II .mm */,
				FED9B19127943F41008412D6 /* 剑指 Offer 39. 数组中出现次数超过一半的数字.mm */,
				FED9B193279444F3008412D6 /* 剑指 Offer 66. 构建乘积数组.mm */,
				FED9B1952794493D008412D6 /* 剑指 Offer 14- I. 剪绳子 .mm */,
				FED9B197279463AB008412D6 /* 剑指 Offer 57 - II. 和为s的连续正数序列 .mm */,
				FED9B1A0279552BB008412D6 /* 剑指 Offer 29. 顺时针打印矩阵 .mm */,
				FED9B1B32796C2AA008412D6 /* 剑指 Offer 31. 栈的压入、弹出序列 .mm */,
				FED9B1B52796C8E4008412D6 /* 剑指 Offer 20. 表示数值的字符串.mm */,
				FEB4F00C279848FE00826907 /* 剑指 Offer 59 - I. 滑动窗口的最大值.mm */,
				FEB4F0172799A76D00826907 /* 剑指 Offer 59 - II. 队列的最大值 .mm */,
				FEB4F032279BFC3300826907 /* 剑指 Offer 37. 序列化二叉树 .mm */,
				FEB4F034279C266E00826907 /* 剑指 Offer 17. 打印从1到最大的n位数.mm */,
				FEB4F036279C28D100826907 /* 剑指 Offer 51. 数组中的逆序对 .mm */,
			);
			path = "剑指offer";
			sourceTree = "<group>";
		};
		867D6C76276CDEE80035EE3A = {
			isa = PBXGroup;
			children = (
				867D6C81276CDEE80035EE3A /* LeetCode */,
				867D6C9A276CDEFF0035EE3A /* LeetCodeTests */,
				867D6C80276CDEE80035EE3A /* Products */,
			);
			sourceTree = "<group>";
		};
		867D6C80276CDEE80035EE3A /* Products */ = {
			isa = PBXGroup;
			children = (
				867D6C7F276CDEE80035EE3A /* LeetCode.app */,
				867D6C99276CDEFF0035EE3A /* LeetCodeTests.xctest */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		867D6C81276CDEE80035EE3A /* LeetCode */ = {
			isa = PBXGroup;
			children = (
				867D6C82276CDEE80035EE3A /* AppDelegate.h */,
				867D6C83276CDEE80035EE3A /* AppDelegate.m */,
				867D6C85276CDEE80035EE3A /* ViewController.h */,
				867D6C86276CDEE80035EE3A /* ViewController.m */,
				867D6C88276CDEE90035EE3A /* Assets.xcassets */,
				867D6C8A276CDEE90035EE3A /* Main.storyboard */,
				867D6C8D276CDEE90035EE3A /* main.m */,
				867D6C8F276CDEE90035EE3A /* LeetCode.entitlements */,
			);
			path = LeetCode;
			sourceTree = "<group>";
		};
		867D6C9A276CDEFF0035EE3A /* LeetCodeTests */ = {
			isa = PBXGroup;
			children = (
				8672D30D2776087C00464A71 /* 剑指offer */,
				86B723DA276ECD58009EB4D9 /* 基本算法 */,
				86B723D9276ECD4A009EB4D9 /* LeetCode */,
				867D6C9B276CDEFF0035EE3A /* LeetCodeTests.m */,
			);
			path = LeetCodeTests;
			sourceTree = "<group>";
		};
		86B723D9276ECD4A009EB4D9 /* LeetCode */ = {
			isa = PBXGroup;
			children = (
				867D6CA2276CDF2B0035EE3A /* 无重复字符的最长子串.mm */,
				86306C4A276DD46C009BFC2B /* LRU缓存机制.mm */,
				86B723DD276F3D36009EB4D9 /* 数组中的第K个最大元素.mm */,
				86B723DF276F488F009EB4D9 /* 二叉树层次遍历.mm */,
				86B723E1276F4B53009EB4D9 /* 二叉树的锯齿形层序遍历.mm */,
				8663022D2770BF6B00946B89 /* 121. 买卖股票的最佳时机.mm */,
				860F233E2772146F00A1713E /* 15.三数之和.mm */,
				86E88A0E277374EA00FEABFF /* 160. 相交链表.mm */,
				866CE2DD27746E1400D1E401 /* 236. 二叉树的最近公共祖先.mm */,
				866CE2DF2774786500D1E401 /* 200. 岛屿数量.mm */,
			);
			path = LeetCode;
			sourceTree = "<group>";
		};
		86B723DA276ECD58009EB4D9 /* 基本算法 */ = {
			isa = PBXGroup;
			children = (
				FE60930527A040F100A68E60 /* 初级算法 */,
				8616BB7F278D6B1000173F58 /* 链表 */,
				866AC04727773C7300A27148 /* 二分查找 */,
				86B723DB276ECD76009EB4D9 /* QuickSort.mm */,
				FEB4F038279C30A700826907 /* MergeSort.mm */,
			);
			path = "基本算法";
			sourceTree = "<group>";
		};
		FE60930527A040F100A68E60 /* 初级算法 */ = {
			isa = PBXGroup;
			children = (
				FE60930627A0411600A68E60 /* 删除排序数组中的重复项.mm */,
				FE60930827A0446C00A68E60 /* 买卖股票的最佳时机 II.mm */,
				FEEB5FF627A2DAEE0045E12F /* 旋转数组.mm */,
				FEEB5FF827A2E4EE0045E12F /* 存在重复元素.mm */,
				FE85D8B327A4353700A2A684 /* 两个数组的交集 II.mm */,
				FEC2FD7827AC049300885574 /* 加一 .mm */,
				FEC2FD7A27AC0AD300885574 /* 移动零.mm */,
				FEC2FD7C27AC100800885574 /* 有效的数独 .mm */,
				FEC2FD7E27AC222300885574 /* 旋转图像.mm */,
				FEC2FE0827AD4C7900885574 /* 整数反转.mm */,
				FEC2FE0A27AD6F4400885574 /* 字符串中的第一个唯一字符.mm */,
				FEC2FE0C27AD746200885574 /* 有效的字母异位词.mm */,
				FEC2FE0E27AE089300885574 /* 验证回文串.mm */,
				FEC2FE1027AE0D8F00885574 /* 字符串转换整数 (atoi) .mm */,
				FEC2FE1227AE4D4700885574 /* 外观数列.mm */,
				FEC2FE1427AE52CF00885574 /* 最长公共前缀.mm */,
			);
			path = "初级算法";
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		867D6C7E276CDEE80035EE3A /* LeetCode */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 867D6C92276CDEE90035EE3A /* Build configuration list for PBXNativeTarget "LeetCode" */;
			buildPhases = (
				867D6C7B276CDEE80035EE3A /* Sources */,
				867D6C7C276CDEE80035EE3A /* Frameworks */,
				867D6C7D276CDEE80035EE3A /* Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = LeetCode;
			productName = LeetCode;
			productReference = 867D6C7F276CDEE80035EE3A /* LeetCode.app */;
			productType = "com.apple.product-type.application";
		};
		867D6C98276CDEFF0035EE3A /* LeetCodeTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 867D6C9F276CDEFF0035EE3A /* Build configuration list for PBXNativeTarget "LeetCodeTests" */;
			buildPhases = (
				867D6C95276CDEFF0035EE3A /* Sources */,
				867D6C96276CDEFF0035EE3A /* Frameworks */,
				867D6C97276CDEFF0035EE3A /* Resources */,
			);
			buildRules = (
			);
			dependencies = (
				867D6C9E276CDEFF0035EE3A /* PBXTargetDependency */,
			);
			name = LeetCodeTests;
			productName = LeetCodeTests;
			productReference = 867D6C99276CDEFF0035EE3A /* LeetCodeTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		867D6C77276CDEE80035EE3A /* Project object */ = {
			isa = PBXProject;
			attributes = {
				BuildIndependentTargetsInParallel = 1;
				LastUpgradeCheck = 1310;
				TargetAttributes = {
					867D6C7E276CDEE80035EE3A = {
						CreatedOnToolsVersion = 13.1;
					};
					867D6C98276CDEFF0035EE3A = {
						CreatedOnToolsVersion = 13.1;
						TestTargetID = 867D6C7E276CDEE80035EE3A;
					};
				};
			};
			buildConfigurationList = 867D6C7A276CDEE80035EE3A /* Build configuration list for PBXProject "LeetCode" */;
			compatibilityVersion = "Xcode 13.0";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = 867D6C76276CDEE80035EE3A;
			productRefGroup = 867D6C80276CDEE80035EE3A /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				867D6C7E276CDEE80035EE3A /* LeetCode */,
				867D6C98276CDEFF0035EE3A /* LeetCodeTests */,
			);
		};
/* End PBXProject section */

/* Begin PBXResourcesBuildPhase section */
		867D6C7D276CDEE80035EE3A /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				867D6C89276CDEE90035EE3A /* Assets.xcassets in Resources */,
				867D6C8C276CDEE90035EE3A /* Main.storyboard in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		867D6C97276CDEFF0035EE3A /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		867D6C7B276CDEE80035EE3A /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				867D6C87276CDEE80035EE3A /* ViewController.m in Sources */,
				867D6C8E276CDEE90035EE3A /* main.m in Sources */,
				867D6C84276CDEE80035EE3A /* AppDelegate.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		867D6C95276CDEFF0035EE3A /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				FEC2FD7D27AC100800885574 /* 有效的数独 .mm in Sources */,
				868948C8277878E0002B9F5A /* 在排序数组中查找元素的第一个和最后一个位置.mm in Sources */,
				86F75BE0278030AC00AA4838 /* 剑指 Offer 47. 礼物的最大价值.mm in Sources */,
				FEC2FD7927AC049300885574 /* 加一 .mm in Sources */,
				FED9B1A1279552BB008412D6 /* 剑指 Offer 29. 顺时针打印矩阵 .mm in Sources */,
				8660B105277D8B9500F3B1BF /* 剑指 Offer 28. 对称的二叉树.mm in Sources */,
				86F75BE6278278EA00AA4838 /* 剑指 Offer 18. 删除链表的节点.mm in Sources */,
				86A1CA6F277A06A000475A59 /* 剑指 Offer 53 - I. 在排序数组中查找数字 I.mm in Sources */,
				86960DF7277C06830026C324 /* 剑指 Offer 32 - II. 从上到下打印二叉树 II .mm in Sources */,
				86F75BDE2780283200AA4838 /* 剑指 Offer 42. 连续子数组的最大和.mm in Sources */,
				8616BB99278EE15A00173F58 /* 剑指 Offer 07. 重建二叉树.mm in Sources */,
				8616BB76278BC98F00173F58 /* 剑指 Offer 55 - I. 二叉树的深度.mm in Sources */,
				86A1CA71277A0AEB00475A59 /* 剑指 Offer 53 - II. 0～n-1中缺失的数字.mm in Sources */,
				8616BB87278D863B00173F58 /* 相交链表.mm in Sources */,
				86C5DBFE27882D8000CAACF6 /* 剑指 Offer 54. 二叉搜索树的第k大节点.mm in Sources */,
				FE1DB81727900D670010B4F2 /* 两数相加.mm in Sources */,
				86B723E2276F4B53009EB4D9 /* 二叉树的锯齿形层序遍历.mm in Sources */,
				FED9B198279463AB008412D6 /* 剑指 Offer 57 - II. 和为s的连续正数序列 .mm in Sources */,
				86C6CAA9278AFFED007DD88B /* 剑指 Offer 41. 数据流中的中位数.mm in Sources */,
				8672D30F277608AE00464A71 /* 剑指 Offer 09. 用两个栈实现队列.mm in Sources */,
				86960E05277EE1DE0026C324 /* 剑指 Offer 63. 股票的最大利润.mm in Sources */,
				FEB4F035279C266E00826907 /* 剑指 Offer 17. 打印从1到最大的n位数.mm in Sources */,
				86C5DBFC2787ED7900CAACF6 /* 剑指 Offer 36. 二叉搜索树与双向链表.mm in Sources */,
				8616BB83278D795700173F58 /* 环形链表.mm in Sources */,
				8616BB8B278D924800173F58 /* 移除链表元素.mm in Sources */,
				866AC0422776AD4F00A27148 /* 剑指 Offer 24. 反转链表.mm in Sources */,
				FE4EA8B627917FAF005963BD /* 剑指 Offer 56 - I. 数组中数字出现的次数.mm in Sources */,
				86F75BE22781327500AA4838 /* 剑指 Offer 46. 把数字翻译成字符串.mm in Sources */,
				86CA61D62789589700A09EDD /* 剑指 Offer 45. 把数组排成最小的数.mm in Sources */,
				868948C62778203E002B9F5A /* 寻找旋转排序数组中的最小值.mm in Sources */,
				86DE38B12785665F00D7186B /* 剑指 Offer 21. 调整数组顺序使奇数位于偶数前面.mm in Sources */,
				860F233F2772146F00A1713E /* 15.三数之和.mm in Sources */,
				FEB4F037279C28D100826907 /* 剑指 Offer 51. 数组中的逆序对 .mm in Sources */,
				86DE38B527856ACC00D7186B /* 剑指 Offer 58 - I. 翻转单词顺序.mm in Sources */,
				FE1DB815278FFE170010B4F2 /* 剑指 Offer 65. 不用加减乘除做加法 .mm in Sources */,
				86C6CAA7278A8C15007DD88B /* 剑指 Offer 40. 最小的k个数.mm in Sources */,
				86116E6F277CA6B700598177 /* Pow202112291022.mm in Sources */,
				FEEB5FF927A2E4EE0045E12F /* 存在重复元素.mm in Sources */,
				86C5DBF62786EC0A00CAACF6 /* 剑指 Offer 13. 机器人的运动范围.mm in Sources */,
				868948C22777FD9E002B9F5A /* 剑指 Offer 05. 替换空格.mm in Sources */,
				FEC2FD7B27AC0AD300885574 /* 移动零.mm in Sources */,
				FED9B1962794493D008412D6 /* 剑指 Offer 14- I. 剪绳子 .mm in Sources */,
				8616BB8D278DB56700173F58 /* 奇偶链表.mm in Sources */,
				FEC2FE1527AE52CF00885574 /* 最长公共前缀.mm in Sources */,
				FEC2FE1127AE0D8F00885574 /* 字符串转换整数 (atoi) .mm in Sources */,
				866CE2E02774786500D1E401 /* 200. 岛屿数量.mm in Sources */,
				86C5DBF12786C1A100CAACF6 /* 剑指 Offer 12. 矩阵中的路径.mm in Sources */,
				FEEB5FF727A2DAEE0045E12F /* 旋转数组.mm in Sources */,
				868948C427780265002B9F5A /* 剑指 Offer 58 - II. 左旋转字符串.mm in Sources */,
				86960E01277E996B0026C324 /* 剑指 Offer 10- I. 斐波那契数列.mm in Sources */,
				FE85D8B427A4353700A2A684 /* 两个数组的交集 II.mm in Sources */,
				866CE2DE27746E1400D1E401 /* 236. 二叉树的最近公共祖先.mm in Sources */,
				8616BB9B278EEE1D00173F58 /* 剑指 Offer 16. 数值的整数次方.mm in Sources */,
				867D6C9C276CDEFF0035EE3A /* LeetCodeTests.m in Sources */,
				86960DF5277C02100026C324 /* 剑指 Offer 32 - I. 从上到下打印二叉树.mm in Sources */,
				FEC2FE1327AE4D4700885574 /* 外观数列.mm in Sources */,
				866AC0402776ABFD00A27148 /* 剑指 Offer 06. 从尾到头打印链表.mm in Sources */,
				FED9B1B62796C8E4008412D6 /* 剑指 Offer 20. 表示数值的字符串.mm in Sources */,
				8663022E2770BF6B00946B89 /* 121. 买卖股票的最佳时机.mm in Sources */,
				FEC2FE0927AD4C7900885574 /* 整数反转.mm in Sources */,
				865D8BB1277B15E0008684B9 /* 剑指 Offer 50. 第一个只出现一次的字符.mm in Sources */,
				86F75BEE2783F46200AA4838 /* 剑指 Offer 25. 合并两个排序的链表.mm in Sources */,
				86960E03277EDD970026C324 /* 剑指 Offer 10- II. 青蛙跳台阶问题.mm in Sources */,
				86B723DE276F3D36009EB4D9 /* 数组中的第K个最大元素.mm in Sources */,
				866AC04927773C9C00A27148 /* x 的平方根.mm in Sources */,
				868948CA2778AEFD002B9F5A /* 154. 寻找旋转排序数组中的最小值 II.mm in Sources */,
				86CA61D827895B9600A09EDD /* 剑指 Offer 61. 扑克牌中的顺子.mm in Sources */,
				8616BB81278D6B5300173F58 /* LinkList202201111537.mm in Sources */,
				86F75BE827827A2B00AA4838 /* 剑指 Offer 22. 链表中倒数第k个节点.mm in Sources */,
				FEC2FD7F27AC222300885574 /* 旋转图像.mm in Sources */,
				8616BB78278BCB2F00173F58 /* 剑指 Offer 55 - II. 平衡二叉树.mm in Sources */,
				86960DF9277C08C80026C324 /* 剑指 Offer 32 - III. 从上到下打印二叉树 III.mm in Sources */,
				8672D31127760BC700464A71 /* 剑指 Offer 30. 包含min函数的栈.mm in Sources */,
				FEB4F0182799A76D00826907 /* 剑指 Offer 59 - II. 队列的最大值 .mm in Sources */,
				FEB4F00D279848FE00826907 /* 剑指 Offer 59 - I. 滑动窗口的最大值.mm in Sources */,
				8660B103277D89E100F3B1BF /* 剑指 Offer 27. 二叉树的镜像.mm in Sources */,
				8660B101277D62AA00F3B1BF /* 剑指 Offer 26. 树的子结构.mm in Sources */,
				FE60930727A0411600A68E60 /* 删除排序数组中的重复项.mm in Sources */,
				86F75BF02783F5C900AA4838 /* 剑指 Offer 52. 两个链表的第一个公共节点.mm in Sources */,
				FEC2FE0F27AE089300885574 /* 验证回文串.mm in Sources */,
				86C5DBFA2787E60300CAACF6 /* 剑指 Offer 34. 二叉树中和为某一值的路径.mm in Sources */,
				86306C4B276DD46C009BFC2B /* LRU缓存机制.mm in Sources */,
				866AC0442776AE8F00A27148 /* 剑指 Offer 35. 复杂链表的复制.mm in Sources */,
				86DE38B32785697700D7186B /* 剑指 Offer 57. 和为s的两个数字.mm in Sources */,
				FE7AC54627918E2700CE782E /* 剑指 Offer 56 - II. 数组中数字出现的次数 II .mm in Sources */,
				8616BB93278ECE2700173F58 /* 234. 回文链表.mm in Sources */,
				8616BB7C278D4C8000173F58 /* 剑指 Offer 68 - II. 二叉树的最近公共祖先.mm in Sources */,
				FED9B194279444F3008412D6 /* 剑指 Offer 66. 构建乘积数组.mm in Sources */,
				FED9B1B42796C2AA008412D6 /* 剑指 Offer 31. 栈的压入、弹出序列 .mm in Sources */,
				86F75BE42781D28B00AA4838 /* 剑指 Offer 48. 最长不含重复字符的子字符串.mm in Sources */,
				867D6CA3276CDF2B0035EE3A /* 无重复字符的最长子串.mm in Sources */,
				86B723E0276F488F009EB4D9 /* 二叉树层次遍历.mm in Sources */,
				FEB4F033279BFC3300826907 /* 剑指 Offer 37. 序列化二叉树 .mm in Sources */,
				866AC04D277741BB00A27148 /* 搜索旋转排序数组.mm in Sources */,
				86E88A0F277374EA00FEABFF /* 160. 相交链表.mm in Sources */,
				FED9B19227943F42008412D6 /* 剑指 Offer 39. 数组中出现次数超过一半的数字.mm in Sources */,
				8616BB85278D7BEA00173F58 /* 环形链表 II.mm in Sources */,
				FE1DB813278FF3E40010B4F2 /* 剑指 Offer 15. 二进制中1的个数.mm in Sources */,
				FEC2FE0D27AD746200885574 /* 有效的字母异位词.mm in Sources */,
				FE60930927A0446C00A68E60 /* 买卖股票的最佳时机 II.mm in Sources */,
				8616BB89278D885300173F58 /* 删除链表的倒数第N个节点.mm in Sources */,
				FEC2FE0B27AD6F4400885574 /* 字符串中的第一个唯一字符.mm in Sources */,
				86A1CA6D2779FB2700475A59 /* 剑指 Offer 03. 数组中重复的数字.mm in Sources */,
				866AC0462777392100A27148 /* BinarySearch.mm in Sources */,
				866AC04B27773F9A00A27148 /* 猜数字大小.mm in Sources */,
				8616BB7A278D4AEB00173F58 /* 剑指 Offer 68 - I. 二叉搜索树的最近公共祖先.mm in Sources */,
				FEB4F039279C30A700826907 /* MergeSort.mm in Sources */,
				86B723DC276ECD76009EB4D9 /* QuickSort.mm in Sources */,
				8616BB9D278EF4B400173F58 /* 剑指 Offer 33. 二叉搜索树的后序遍历序列.mm in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		867D6C9E276CDEFF0035EE3A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 867D6C7E276CDEE80035EE3A /* LeetCode */;
			targetProxy = 867D6C9D276CDEFF0035EE3A /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin PBXVariantGroup section */
		867D6C8A276CDEE90035EE3A /* Main.storyboard */ = {
			isa = PBXVariantGroup;
			children = (
				867D6C8B276CDEE90035EE3A /* Base */,
			);
			name = Main.storyboard;
			sourceTree = "<group>";
		};
/* End PBXVariantGroup section */

/* Begin XCBuildConfiguration section */
		867D6C90276CDEE90035EE3A /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++17";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 12.0;
				MTL_ENABLE_DEBUG_INFO = INCLUDE_SOURCE;
				MTL_FAST_MATH = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = macosx;
			};
			name = Debug;
		};
		867D6C91276CDEE90035EE3A /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++17";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 12.0;
				MTL_ENABLE_DEBUG_INFO = NO;
				MTL_FAST_MATH = YES;
				SDKROOT = macosx;
			};
			name = Release;
		};
		867D6C93276CDEE90035EE3A /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME = AccentColor;
				CODE_SIGN_ENTITLEMENTS = LeetCode/LeetCode.entitlements;
				CODE_SIGN_STYLE = Automatic;
				COMBINE_HIDPI_IMAGES = YES;
				CURRENT_PROJECT_VERSION = 1;
				DEVELOPMENT_TEAM = C6T93NC4DJ;
				ENABLE_HARDENED_RUNTIME = YES;
				GENERATE_INFOPLIST_FILE = YES;
				INFOPLIST_KEY_NSHumanReadableCopyright = "";
				INFOPLIST_KEY_NSMainStoryboardFile = Main;
				INFOPLIST_KEY_NSPrincipalClass = NSApplication;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/../Frameworks",
				);
				MARKETING_VERSION = 1.0;
				PRODUCT_BUNDLE_IDENTIFIER = com.duobei.LeetCode;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_EMIT_LOC_STRINGS = YES;
			};
			name = Debug;
		};
		867D6C94276CDEE90035EE3A /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME = AccentColor;
				CODE_SIGN_ENTITLEMENTS = LeetCode/LeetCode.entitlements;
				CODE_SIGN_STYLE = Automatic;
				COMBINE_HIDPI_IMAGES = YES;
				CURRENT_PROJECT_VERSION = 1;
				DEVELOPMENT_TEAM = C6T93NC4DJ;
				ENABLE_HARDENED_RUNTIME = YES;
				GENERATE_INFOPLIST_FILE = YES;
				INFOPLIST_KEY_NSHumanReadableCopyright = "";
				INFOPLIST_KEY_NSMainStoryboardFile = Main;
				INFOPLIST_KEY_NSPrincipalClass = NSApplication;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/../Frameworks",
				);
				MARKETING_VERSION = 1.0;
				PRODUCT_BUNDLE_IDENTIFIER = com.duobei.LeetCode;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_EMIT_LOC_STRINGS = YES;
			};
			name = Release;
		};
		867D6CA0276CDEFF0035EE3A /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				BUNDLE_LOADER = "$(TEST_HOST)";
				CODE_SIGN_STYLE = Automatic;
				COMBINE_HIDPI_IMAGES = YES;
				CURRENT_PROJECT_VERSION = 1;
				DEVELOPMENT_TEAM = C6T93NC4DJ;
				GENERATE_INFOPLIST_FILE = YES;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/../Frameworks",
					"@loader_path/../Frameworks",
				);
				MARKETING_VERSION = 1.0;
				PRODUCT_BUNDLE_IDENTIFIER = com.duobei.LeetCodeTests;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_EMIT_LOC_STRINGS = NO;
				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/LeetCode.app/Contents/MacOS/LeetCode";
			};
			name = Debug;
		};
		867D6CA1276CDEFF0035EE3A /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				BUNDLE_LOADER = "$(TEST_HOST)";
				CODE_SIGN_STYLE = Automatic;
				COMBINE_HIDPI_IMAGES = YES;
				CURRENT_PROJECT_VERSION = 1;
				DEVELOPMENT_TEAM = C6T93NC4DJ;
				GENERATE_INFOPLIST_FILE = YES;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/../Frameworks",
					"@loader_path/../Frameworks",
				);
				MARKETING_VERSION = 1.0;
				PRODUCT_BUNDLE_IDENTIFIER = com.duobei.LeetCodeTests;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_EMIT_LOC_STRINGS = NO;
				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/LeetCode.app/Contents/MacOS/LeetCode";
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		867D6C7A276CDEE80035EE3A /* Build configuration list for PBXProject "LeetCode" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				867D6C90276CDEE90035EE3A /* Debug */,
				867D6C91276CDEE90035EE3A /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		867D6C92276CDEE90035EE3A /* Build configuration list for PBXNativeTarget "LeetCode" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				867D6C93276CDEE90035EE3A /* Debug */,
				867D6C94276CDEE90035EE3A /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		867D6C9F276CDEFF0035EE3A /* Build configuration list for PBXNativeTarget "LeetCodeTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				867D6CA0276CDEFF0035EE3A /* Debug */,
				867D6CA1276CDEFF0035EE3A /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = 867D6C77276CDEE80035EE3A /* Project object */;
}
